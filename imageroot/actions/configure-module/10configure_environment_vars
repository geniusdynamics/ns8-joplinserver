#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import re

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

# This is specific to you module, so you need to change it accordingly.
# we read a json stdin {"vars1":true, "var2":"foo", "vars3": 3} and we writ it to .config/state/environment

# joplin url settings
host = data.get("host", "")
port = data.get("TCP_PORT", "")
url = host + ":" + port
APP_BASE_URL = "https://" + host  # "https://"+host
# Mail Settings
rdb = agent.redis_connect(use_replica=True)
smtp_settings = agent.get_smarthost_settings(rdb)

SMTP_HOST = smtp_settings["host"]
SMTP_PORT = smtp_settings["port"]
SMTP_USERNAME = smtp_settings["username"]
SMTP_PASSWORD = smtp_settings["password"]
SMTP_ENABLED = "true" if smtp_settings["enabled"] else "false"
SMTP_ENCRYPTION = smtp_settings["encrypt_smtp"]
SMTP_TLSVERIFY = "true" if smtp_settings["tls_verify"] else "false"

if re.match(r"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$", SMTP_USERNAME):
    MAILER_NOREPLY_EMAIL = SMTP_USERNAME
else:
# Extract maildomain from host (strip subdomain) to handle slef main for joplin
host = SMTP_HOST
parts = host.split('.')
if len(parts) >= 2:
    maildomain = '.'.join(parts[-2:])
else:
    maildomain = host  # fallback if host is weird or just a TLD

MAILER_NOREPLY_EMAIL = f"noreply@{maildomain}"
app_config = {
    "APP_BASE_URL": APP_BASE_URL,
    "MAILER_ENABLED": SMTP_ENABLED,
    "MAILER_SECURITY": SMTP_ENCRYPTION,
    "MAILER_HOST": SMTP_HOST,
    "MAILER_PORT": SMTP_PORT,
    "MAILER_AUTH_USER": SMTP_USERNAME,
    "MAILER_AUTH_PASSWORD": SMTP_PASSWORD,
    "MAILER_NOREPLY_EMAIL": MAILER_NOREPLY_EMAIL,
    "MAILER_NOREPLY_NAME": "JoplinServer",
}
agent.write_envfile("app.env", app_config)


agent.dump_env()
